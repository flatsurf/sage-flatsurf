{"project": "sage-flatsurf", "project_url": "https://github.com/flatsurf/sage-flatsurf", "show_commit_url": "https://github.com/flatsurf/sage-flatsurf/commit/", "hash_length": 8, "revision_to_hash": {"0": "6cc0caa562342826821359ae27f35db1b018be1b"}, "revision_to_date": {"0": 1739996724000}, "params": {"arch": ["x86_64"], "cpu": ["Standard_DS2_v2"], "machine": ["Azure"], "os": ["Linux"], "ram": ["61830880"], "python": ["", "3.11", "3.12", "3.9"], "cppyy>=2.0.0,<3": ["", null], "cxx-compiler": ["", null], "gap-defaults": ["", null], "pip+flipper": ["", null], "pyeantic": ["1.0.3", "1.3.0", null], "pyexactreal": ["2.2.1", "3.1.0", null], "pyflatsurf": ["3.13.3", "3.9.3", null], "sagelib": ["10.0", "9.4", null], "scipy": ["", null], "surface-dynamics>=0.4.7": ["", null], "matplotlib-base": ["", null], "wheel": ["", null], "branch": ["master"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Standard_DS2_v2", "machine": "Azure", "os": "Linux", "ram": "61830880", "python": "3.12", "branch": "master", "cppyy>=2.0.0,<3": null, "cxx-compiler": null, "gap-defaults": null, "pip+flipper": null, "pyeantic": null, "pyexactreal": null, "pyflatsurf": null, "sagelib": null, "scipy": null, "surface-dynamics>=0.4.7": null, "matplotlib-base": null, "wheel": null}], "benchmarks": {"geometry.hyperbolic.time_HyperbolicPlane_polygon": {"code": "def time_HyperbolicPlane_polygon(half_spaces):\n    r\"\"\"\n    Time how quickly we can form a convex polygon from a set of half spaces.\n\n    The bottleneck here should be sorting the half spaces by angle, i.e., this\n    should run in O(nlogn).\n    \"\"\"\n    H.polygon(half_spaces)", "min_run_count": 2, "name": "geometry.hyperbolic.time_HyperbolicPlane_polygon", "number": 0, "param_names": ["param1"], "params": [["{{(x^2 + y^2) - 1 \u2264 0}}", "[{(x^2 + y^2) - 8*x + 15 \u2264 0}, \u2026 31 more]", "[{(x^2 + y^2) - 1240*x + 384399 \u2264 0}, \u2026 1023 more]", "[{(x^2 + y^2) - 1240*x + 384399 \u2264 0}, \u2026 2047 more]", "[{(x^2 + y^2) - 1240*x + 384399 \u2264 0}, \u2026 4095 more]"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "e2f01c333a4f69d9ebc5e487eda7502eeb00ebf6e615b2986e2d9ce201ee604d", "warmup_time": -1}, "polygons.time_triangle": {"code": "def time_triangle(angles):\n    r\"\"\"\n    Time how quickly we can form a triangle from a given triple of angles.\n\n    The runtime of this should be mostly bound by the time it takes to\n    construct the underlying number field.\n    \"\"\"\n    polygons.triangle(*angles)", "min_run_count": 2, "name": "polygons.time_triangle", "number": 0, "param_names": ["param1"], "params": [["{3, 4, 5}", "{24, 22, 23}", "{24, 25, 23}", "{24, 25, 26}", "{48, 26, 75}"]], "repeat": 0, "rounds": 2, "sample_time": 0.01, "type": "time", "unit": "seconds", "version": "4163a919dfc9d755d954c71b04e65b3d161dc2a82e2d2f9f943e47175861fd44", "warmup_time": -1}}, "machines": {"Azure": {"arch": "x86_64", "cpu": "Standard_DS2_v2", "machine": "Azure", "os": "Linux", "ram": "61830880", "version": 1}}, "tags": {}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}